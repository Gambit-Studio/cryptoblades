{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5B95928EDbA13F6CB4b480893F3e4C4850323572",
    "txHash": "0xaf1ea1f39ea4dd83a94fdb7f6b066f9d85328016fbad00180a72e4a47b3e5708"
  },
  "proxies": [
    {
      "address": "0x27542B3BFC844AD53A3b436D6b473122381799a1",
      "txHash": "0x77c7e835b267aa251b36a7d1ba02741ed50a8176ff05a010cfba96645597b599",
      "kind": "transparent"
    },
    {
      "address": "0x204d11d84Fe50f5Ad78930D1f81e94f9B0B37e1e",
      "txHash": "0x8d041152145b2ffe57e84dcedc906ade9f0316dd00da9264792eb41299068f5c",
      "kind": "transparent"
    },
    {
      "address": "0x271dfd0bCE70d5C05e9619Def0C944a3D69cb83b",
      "txHash": "0x8e57776811761986969a0bf9c470434abba7c91e54ca2d87ec2d5edd5d15f889",
      "kind": "transparent"
    },
    {
      "address": "0xa51fDDE7BFD925b92B0911dEFc214590f3412e74",
      "txHash": "0x986728dc50058b2b66e94b656f4a993126398033b75ce4cd8aaf4ec23453aaa2",
      "kind": "transparent"
    },
    {
      "address": "0x56C4b9EAe720C4966fF37f1Ed9e062db731471E7",
      "txHash": "0x5b48a31dc906d60fb77a591033995d39377c1188726ab0a332bf7236360a603d",
      "kind": "transparent"
    },
    {
      "address": "0x66a122bF74f441e38a3C12F7FD3adc87a9FEC365",
      "txHash": "0x56ce85ffba93ae6c235f2ae3fbb0e13e0295f53b7012d3112f5d83fa465e7379",
      "kind": "transparent"
    },
    {
      "address": "0x186b8324E3eb4F55822446fc3f62d82EbC69780E",
      "txHash": "0x89513c74e526c8d1a874e45b281c8e712c87cf94d2300ebfd56cf4a20b0f8d09",
      "kind": "transparent"
    },
    {
      "address": "0xfF64a01B8b1d303EA3B850ff43F88BD12faFa3fA",
      "txHash": "0x1e47afc2043a967b73c7b8ba0d25b7edc3baf4bea2a2793c880d0adf93affb09",
      "kind": "transparent"
    },
    {
      "address": "0xE5987f0d937038db706738E4f9e5209CE1c67846",
      "txHash": "0x3bd943bbc8c3e3ff20d8826a4ce41af9346228c927d70bd7461819f5c0074c52",
      "kind": "transparent"
    },
    {
      "address": "0x2D2308441C167b67837DC574EEd75E8d01ED6E21",
      "txHash": "0x5e7553d8455055d5872e8db82b2061e8eb296d96fbe24b5dcc4009d92887047e",
      "kind": "transparent"
    },
    {
      "address": "0x0ed35132C88fFF3160f45A7bFdf78ef3b23c4616",
      "txHash": "0xbcf2b058f81b6c6c61226da17ca6a52b8257372a4decf6cdce45666f419632a2",
      "kind": "transparent"
    },
    {
      "address": "0x7aa401A8b4d1a28039a9fE3329F9d1Fc863eE8e1",
      "txHash": "0xe4431b89d259c17f207aa39469da6d2f9037dbebe7390f62e30a9e156f553594",
      "kind": "transparent"
    },
    {
      "address": "0xAF7CA939f4B2a922B2974C1be495C0f7Fb892095",
      "txHash": "0x7554f8823a3c79f041d0303728c2a16110e749b9c95b3a5aad850b08a1dbf4e5",
      "kind": "transparent"
    },
    {
      "address": "0x0aed8037697E6C019abfbFF5E5f5Bac5F21cf1D4",
      "txHash": "0xb4d92235272710b21a7cb1945feaa9ce6e80654c279c67ec4093abe82f308605",
      "kind": "transparent"
    },
    {
      "address": "0x897Af6F96B793764366D833338a9Ce85b20727AC",
      "txHash": "0x620a24502b1bd9563b8e8d1c44edc2efa6454d495d6a59c4ae6d711a624d8531",
      "kind": "transparent"
    },
    {
      "address": "0xd3Bc3B661eBD1a9c474F0bE8dF1Cdb6d19408E64",
      "txHash": "0xd3166151c93bbd7aa84c375c2cd77f687b349e33711366bb2bdd9a564f8c03aa",
      "kind": "transparent"
    },
    {
      "address": "0x6862F4b5AdB223424B85D0D427fB60ff64BBD8a6",
      "txHash": "0xca6b8e3174c9a276f3943071612de3535016783703e5c0bcec288a5dec13ff07",
      "kind": "transparent"
    },
    {
      "address": "0x6Cd5b2Fb0E293e24bd91b934BD281EAF6f0354bE",
      "txHash": "0xec09ce8c16c3e89861323de3dee09bf93a7961ca591c98e2cab4522ab39551cc",
      "kind": "transparent"
    },
    {
      "address": "0x895311B0530A3f67eF095a63DE4Af034Ffdf595B",
      "txHash": "0x75890cf4c3e130d12acbb22d8d8ae7ab5d4ec5c140f255cf734ef1bdf4333147",
      "kind": "transparent"
    },
    {
      "address": "0xDE8Bf954E87349C6453D3851255Ab7aDbf83E8DC",
      "txHash": "0x44581958b44996994bed8cba40459ac73fca0356b9cc8a81ac3fec3dcd7cea53",
      "kind": "transparent"
    },
    {
      "address": "0xD8b8427bc259C619a4d50517b4C5Cc7c9Daf50d9",
      "txHash": "0xc2fe799271eb9e50b4183051c6b9f2fae71c766519beb979606c6a0dcd63fbad",
      "kind": "transparent"
    },
    {
      "address": "0x6e65935E4072Ef0485c6a1aa0C1Bb9919dC3AC97",
      "txHash": "0x064693ae0395e0832dccf393134722a855bc9aca21d643d05d6b628ec4de3cad",
      "kind": "transparent"
    },
    {
      "address": "0x4F348F28392439E059260D7c303fd564f0413972",
      "txHash": "0x705c45b2748d6fc33e317abbf29101b8948b25928860d8e483d9ed56d427c4ac",
      "kind": "transparent"
    },
    {
      "address": "0xBF2d25D05231B5B6fb73e6C2092589FE71E1ef3a",
      "txHash": "0xcaff16f07d8515058d3df1802826c7021308fed2fdcd5342a56d7a1cbe823ba2",
      "kind": "transparent"
    },
    {
      "address": "0x59A87EceF48901fa594421a77f1B6487060CD419",
      "txHash": "0x5c4da648675821d206160a5bc504c13d0abf598ea24552c66a00422bcd3a8263",
      "kind": "transparent"
    },
    {
      "address": "0xc7B765196A9d8e2A271dB9B28037a13Cb2189C52",
      "txHash": "0x01316a802df7fd4966c276250378daf8778f5808bcfe26583a577acd943aca28",
      "kind": "transparent"
    },
    {
      "address": "0x740313891B18b9C44A7B189fA274bc2D616d9b12",
      "txHash": "0x0c05a61f835744e7eecd2b0e00604651726301d4eb0efb2c2eea6a0627428fea",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6e316192db2abf3792e0c4060fb79ed8aaa21bac2a74aaf1891af38a28100b33": {
      "address": "0x217Aaf75335d19FC12ea3947177f0AEE1CF7BC8F",
      "txHash": "0x46bcb0c08b11b27ebd1c2e3cd49a5f6155010b985ee7ddadeb70bd87a6238a73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "../project:/contracts/staking/RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "../project:/contracts/staking/FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)5647": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d5854441c84500cef08bd570270f5c05a2d94933cc4f89c6fa0caad7f27a63b5": {
      "address": "0x7b6FB4DD47487b559D11861158C99B7E283b5AD4",
      "txHash": "0x34da22725c73584adffb466845de089593e458b75d367c53ff98fa7701bfb783",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RewardsDistributionRecipientUpgradeable",
            "label": "rewardsDistribution",
            "type": "t_address",
            "src": "../project:/contracts/staking/RewardsDistributionRecipientUpgradeable.sol:9"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FailsafeUpgradeable",
            "label": "failsafeModeActive",
            "type": "t_bool",
            "src": "../project:/contracts/staking/FailsafeUpgradeable.sol:7"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:31"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "stakingToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:32"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "periodFinish",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:33"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:34"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardsDuration",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:35"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeTime",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:36"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "lastUpdateTime",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:37"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:38"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:40"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "rewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:41"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:43"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:44"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "_stakeTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:45"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "__game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:48"
          },
          {
            "contract": "StakingRewardsUpgradeable",
            "label": "minimumStakeAmount",
            "type": "t_uint256",
            "src": "../project:/contracts/staking/StakingRewardsUpgradeable.sol:50"
          }
        ],
        "types": {
          "t_contract(IERC20)5647": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81a7b14bdf59edcfbda5901a3672a21508a9e49744ce9d3a943c701adbc11119": {
      "address": "0x35BE00D7c5E45668637842Cab5BeFEC230002764",
      "txHash": "0x47def900597b097502611ffb59242cf68396c558241ee053b67d5dc09bb17d7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "priceSet",
            "type": "t_bool",
            "src": "../project:/contracts/BasicPriceOracle.sol:10"
          },
          {
            "contract": "BasicPriceOracle",
            "label": "currentPrice_",
            "type": "t_uint256",
            "src": "../project:/contracts/BasicPriceOracle.sol:11"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f9364e364257ac8ac3623fd5f5e7182a656cf5c804c9199b4fb5311e42e103a6": {
      "address": "0x98B87122C32ca4229c63767fad576082F5f88f55",
      "txHash": "0x8a0db1e96a2381fdf1573a5da6372ab564b89f0a616e1edaa88efc99865d8fc5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Characters",
            "label": "tokens",
            "type": "t_array(t_struct(Character)27448_storage)dyn_storage",
            "src": "../project:/contracts/characters.sol:92"
          },
          {
            "contract": "Characters",
            "label": "cosmetics",
            "type": "t_array(t_struct(CharacterCosmetics)27453_storage)dyn_storage",
            "src": "../project:/contracts/characters.sol:93"
          },
          {
            "contract": "Characters",
            "label": "experienceTable",
            "type": "t_array(t_uint256)256_storage",
            "src": "../project:/contracts/characters.sol:98"
          },
          {
            "contract": "Characters",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/characters.sol:100"
          },
          {
            "contract": "Characters",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/characters.sol:102"
          },
          {
            "contract": "Characters",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/characters.sol:104"
          },
          {
            "contract": "Characters",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/characters.sol:105"
          },
          {
            "contract": "Characters",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/characters.sol:107"
          },
          {
            "contract": "Characters",
            "label": "raidsDone",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/characters.sol:109"
          },
          {
            "contract": "Characters",
            "label": "raidsWon",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/characters.sol:110"
          }
        ],
        "types": {
          "t_array(t_struct(Character)27448_storage)dyn_storage": {
            "label": "struct Characters.Character[]"
          },
          "t_struct(Character)27448_storage": {
            "label": "struct Characters.Character",
            "members": [
              {
                "label": "xp",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              },
              {
                "label": "trait",
                "type": "t_uint8"
              },
              {
                "label": "staminaTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_struct(CharacterCosmetics)27453_storage)dyn_storage": {
            "label": "struct Characters.CharacterCosmetics[]"
          },
          "t_struct(CharacterCosmetics)27453_storage": {
            "label": "struct Characters.CharacterCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)256_storage": {
            "label": "uint256[256]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3405457ceb108cd459784aac9526d0be97681f369410c9a04f5cfd3097b7231a": {
      "address": "0x60F1266E2b5821DE878915db6507041511174d65",
      "txHash": "0xff4d5d7f36a9d13dfe0704427d3f1572e5dbc7a8fc7f9b1848ae41944209096a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Weapons",
            "label": "tokens",
            "type": "t_array(t_struct(Weapon)40336_storage)dyn_storage",
            "src": "../project:/contracts/weapons.sol:94"
          },
          {
            "contract": "Weapons",
            "label": "cosmetics",
            "type": "t_array(t_struct(WeaponCosmetics)40348_storage)dyn_storage",
            "src": "../project:/contracts/weapons.sol:95"
          },
          {
            "contract": "Weapons",
            "label": "burnPoints",
            "type": "t_mapping(t_uint256,t_struct(WeaponBurnPoints)40343_storage)",
            "src": "../project:/contracts/weapons.sol:96"
          },
          {
            "contract": "Weapons",
            "label": "burnPointMultiplier",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:98"
          },
          {
            "contract": "Weapons",
            "label": "lowStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:99"
          },
          {
            "contract": "Weapons",
            "label": "fourStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:100"
          },
          {
            "contract": "Weapons",
            "label": "fiveStarBurnPowerPerPoint",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:101"
          },
          {
            "contract": "Weapons",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "../project:/contracts/weapons.sol:103"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointBasic",
            "type": "t_int128",
            "src": "../project:/contracts/weapons.sol:104"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointPWR",
            "type": "t_int128",
            "src": "../project:/contracts/weapons.sol:105"
          },
          {
            "contract": "Weapons",
            "label": "powerMultPerPointMatching",
            "type": "t_int128",
            "src": "../project:/contracts/weapons.sol:106"
          },
          {
            "contract": "Weapons",
            "label": "lastTransferTimestamp",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/weapons.sol:109"
          },
          {
            "contract": "Weapons",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:111"
          },
          {
            "contract": "Weapons",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/weapons.sol:112"
          },
          {
            "contract": "Weapons",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "../project:/contracts/weapons.sol:114"
          },
          {
            "contract": "Weapons",
            "label": "burnDust",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/weapons.sol:119"
          },
          {
            "contract": "Weapons",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/weapons.sol:121"
          },
          {
            "contract": "Weapons",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/weapons.sol:127"
          }
        ],
        "types": {
          "t_array(t_struct(Weapon)40336_storage)dyn_storage": {
            "label": "struct Weapons.Weapon[]"
          },
          "t_struct(Weapon)40336_storage": {
            "label": "struct Weapons.Weapon",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint8"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_struct(WeaponCosmetics)40348_storage)dyn_storage": {
            "label": "struct Weapons.WeaponCosmetics[]"
          },
          "t_struct(WeaponCosmetics)40348_storage": {
            "label": "struct Weapons.WeaponCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(WeaponBurnPoints)40343_storage)": {
            "label": "mapping(uint256 => struct Weapons.WeaponBurnPoints)"
          },
          "t_struct(WeaponBurnPoints)40343_storage": {
            "label": "struct Weapons.WeaponBurnPoints",
            "members": [
              {
                "label": "lowStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fourStarBurnPoints",
                "type": "t_uint8"
              },
              {
                "label": "fiveStarBurnPoints",
                "type": "t_uint8"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1657c3d5ea30ed7f52b31bde99f6b931696317e6414644811f51a26e5cdca8e5": {
      "address": "0xb2503a68582940C1806acb7d9e7b7A32CD342Ba9",
      "txHash": "0x8e4279465c2cbbad68ac50f023eaa52ea627bdf2047ae4ae36be95361dfaa77c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "CryptoBlades",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/cryptoblades.sol:49"
          },
          {
            "contract": "CryptoBlades",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/cryptoblades.sol:50"
          },
          {
            "contract": "CryptoBlades",
            "label": "skillToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/cryptoblades.sol:51"
          },
          {
            "contract": "CryptoBlades",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)32014",
            "src": "../project:/contracts/cryptoblades.sol:52"
          },
          {
            "contract": "CryptoBlades",
            "label": "randoms",
            "type": "t_contract(IRandoms)32033",
            "src": "../project:/contracts/cryptoblades.sol:53"
          },
          {
            "contract": "CryptoBlades",
            "label": "characterLimit",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:123"
          },
          {
            "contract": "CryptoBlades",
            "label": "staminaCostFight",
            "type": "t_uint8",
            "src": "../project:/contracts/cryptoblades.sol:125"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintCharacterFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:128"
          },
          {
            "contract": "CryptoBlades",
            "label": "refillStaminaFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:131"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardBaseline",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:134"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightRewardGasOffset",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:135"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintWeaponFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:137"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:138"
          },
          {
            "contract": "CryptoBlades",
            "label": "nonce",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:140"
          },
          {
            "contract": "CryptoBlades",
            "label": "lastBlockNumberCalled",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:142"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightXpGain",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:144"
          },
          {
            "contract": "CryptoBlades",
            "label": "tokenRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:146"
          },
          {
            "contract": "CryptoBlades",
            "label": "xpRewards",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:147"
          },
          {
            "contract": "CryptoBlades",
            "label": "oneFrac",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:149"
          },
          {
            "contract": "CryptoBlades",
            "label": "fightTraitBonus",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:150"
          },
          {
            "contract": "CryptoBlades",
            "label": "inGameOnlyFunds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:152"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalInGameOnlyFunds",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:153"
          },
          {
            "contract": "CryptoBlades",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/cryptoblades.sol:155"
          },
          {
            "contract": "CryptoBlades",
            "label": "_rewardsClaimTaxTimerStart",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:157"
          },
          {
            "contract": "CryptoBlades",
            "label": "stakeFromGameImpl",
            "type": "t_contract(IStakeFromGame)32050",
            "src": "../project:/contracts/cryptoblades.sol:159"
          },
          {
            "contract": "CryptoBlades",
            "label": "durabilityCostFight",
            "type": "t_uint8",
            "src": "../project:/contracts/cryptoblades.sol:161"
          },
          {
            "contract": "CryptoBlades",
            "label": "burnWeaponFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:163"
          },
          {
            "contract": "CryptoBlades",
            "label": "reforgeWeaponWithDustFee",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:164"
          },
          {
            "contract": "CryptoBlades",
            "label": "blacksmith",
            "type": "t_contract(Blacksmith)18959",
            "src": "../project:/contracts/cryptoblades.sol:166"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPayments",
            "type": "t_mapping(t_address,t_struct(MintPayment)28797_storage)",
            "src": "../project:/contracts/cryptoblades.sol:175"
          },
          {
            "contract": "CryptoBlades",
            "label": "totalMintPaymentSkillRefundable",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:189"
          },
          {
            "contract": "CryptoBlades",
            "label": "mintPaymentSkillDepositeds",
            "type": "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)28816_storage)",
            "src": "../project:/contracts/cryptoblades.sol:190"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxMax",
            "type": "t_int128",
            "src": "../project:/contracts/cryptoblades.sol:192"
          },
          {
            "contract": "CryptoBlades",
            "label": "rewardsClaimTaxDuration",
            "type": "t_uint256",
            "src": "../project:/contracts/cryptoblades.sol:193"
          },
          {
            "contract": "CryptoBlades",
            "label": "vars",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/cryptoblades.sol:195"
          },
          {
            "contract": "CryptoBlades",
            "label": "userVars",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/cryptoblades.sol:196"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_contract(IERC20)5647": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceOracle)32014": {
            "label": "contract IPriceOracle"
          },
          "t_contract(IRandoms)32033": {
            "label": "contract IRandoms"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_contract(IStakeFromGame)32050": {
            "label": "contract IStakeFromGame"
          },
          "t_contract(Blacksmith)18959": {
            "label": "contract Blacksmith"
          },
          "t_mapping(t_address,t_struct(MintPayment)28797_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPayment)"
          },
          "t_struct(MintPayment)28797_storage": {
            "label": "struct CryptoBlades.MintPayment",
            "members": [
              {
                "label": "blockHash",
                "type": "t_bytes32"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "count",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_struct(MintPaymentSkillDeposited)28816_storage)": {
            "label": "mapping(address => struct CryptoBlades.MintPaymentSkillDeposited)"
          },
          "t_struct(MintPaymentSkillDeposited)28816_storage": {
            "label": "struct CryptoBlades.MintPaymentSkillDeposited",
            "members": [
              {
                "label": "skillDepositedFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillDepositedFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromWallet",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromRewards",
                "type": "t_uint256"
              },
              {
                "label": "skillRefundableFromIgo",
                "type": "t_uint256"
              },
              {
                "label": "refundClaimableTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c0f0e6fc7c8f3ba20b0a543fd7b958478140b107aaa5486d95ac18cb6c24547": {
      "address": "0xd49F1cA5D54B2982A2675F8FFC4101b1857fCf44",
      "txHash": "0x23fedd0ca54088480184d2cb13fe7ce786b663c9930d596a8eee417df2926d5c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "MultiAccessUpgradeable",
            "label": "access",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/multiAccessUpgradeable.sol:8"
          },
          {
            "contract": "Raid",
            "label": "completed",
            "type": "t_bool",
            "src": "../project:/contracts/raid.sol:17"
          },
          {
            "contract": "Raid",
            "label": "expectedFinishTime",
            "type": "t_uint256",
            "src": "../project:/contracts/raid.sol:18"
          },
          {
            "contract": "Raid",
            "label": "game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/raid.sol:20"
          },
          {
            "contract": "Raid",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/raid.sol:21"
          },
          {
            "contract": "Raid",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/raid.sol:22"
          },
          {
            "contract": "Raid",
            "label": "raiders",
            "type": "t_array(t_struct(Raider)32803_storage)dyn_storage",
            "src": "../project:/contracts/raid.sol:30"
          },
          {
            "contract": "Raid",
            "label": "participation",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/raid.sol:31"
          },
          {
            "contract": "RaidBasic",
            "label": "staminaDrain",
            "type": "t_uint64",
            "src": "../project:/contracts/raidBasic.sol:14"
          },
          {
            "contract": "RaidBasic",
            "label": "weaponDrops",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/raidBasic.sol:15"
          },
          {
            "contract": "RaidBasic",
            "label": "bounty",
            "type": "t_uint256",
            "src": "../project:/contracts/raidBasic.sol:16"
          },
          {
            "contract": "RaidBasic",
            "label": "bossTrait",
            "type": "t_uint8",
            "src": "../project:/contracts/raidBasic.sol:17"
          },
          {
            "contract": "RaidBasic",
            "label": "totalPower",
            "type": "t_uint256",
            "src": "../project:/contracts/raidBasic.sol:19"
          }
        ],
        "types": {
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_array(t_struct(Raider)32803_storage)dyn_storage": {
            "label": "struct Raid.Raider[]"
          },
          "t_struct(Raider)32803_storage": {
            "label": "struct Raid.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_uint256"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "c1a7a4d9fa68fa6eb27086aed3b3b1e94aef35965f99d123f15f8196294686b6": {
      "address": "0x626DDEfDBF09706FD9F2514e166400aecD27883e",
      "txHash": "0xf55269ae36ce707fc0d0ae582f335ce6763c71fee0be95ea29e424482819a9d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NFTMarket",
            "label": "skillToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/NFTMarket.sol:79"
          },
          {
            "contract": "NFTMarket",
            "label": "taxRecipient",
            "type": "t_address",
            "src": "../project:/contracts/NFTMarket.sol:80"
          },
          {
            "contract": "NFTMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)20933_storage))",
            "src": "../project:/contracts/NFTMarket.sol:83"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenIDs",
            "type": "t_mapping(t_address,t_struct(UintSet)6692_storage)",
            "src": "../project:/contracts/NFTMarket.sol:85"
          },
          {
            "contract": "NFTMarket",
            "label": "listedTokenTypes",
            "type": "t_struct(AddressSet)6571_storage",
            "src": "../project:/contracts/NFTMarket.sol:87"
          },
          {
            "contract": "NFTMarket",
            "label": "isTokenBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NFTMarket.sol:90"
          },
          {
            "contract": "NFTMarket",
            "label": "isUserBanned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NFTMarket.sol:92"
          },
          {
            "contract": "NFTMarket",
            "label": "tax",
            "type": "t_mapping(t_address,t_int128)",
            "src": "../project:/contracts/NFTMarket.sol:95"
          },
          {
            "contract": "NFTMarket",
            "label": "freeTax",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/NFTMarket.sol:97"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultTax",
            "type": "t_int128",
            "src": "../project:/contracts/NFTMarket.sol:98"
          },
          {
            "contract": "NFTMarket",
            "label": "allowedTokenTypes",
            "type": "t_struct(AddressSet)6571_storage",
            "src": "../project:/contracts/NFTMarket.sol:101"
          },
          {
            "contract": "NFTMarket",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/NFTMarket.sol:103"
          },
          {
            "contract": "NFTMarket",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/NFTMarket.sol:104"
          },
          {
            "contract": "NFTMarket",
            "label": "priceOracleSkillPerUsd",
            "type": "t_contract(IPriceOracle)32014",
            "src": "../project:/contracts/NFTMarket.sol:106"
          },
          {
            "contract": "NFTMarket",
            "label": "addFee",
            "type": "t_int128",
            "src": "../project:/contracts/NFTMarket.sol:107"
          },
          {
            "contract": "NFTMarket",
            "label": "changeFee",
            "type": "t_int128",
            "src": "../project:/contracts/NFTMarket.sol:108"
          },
          {
            "contract": "NFTMarket",
            "label": "nftTargetBuyers",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "../project:/contracts/NFTMarket.sol:111"
          }
        ],
        "types": {
          "t_contract(IERC20)5647": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)20933_storage))": {
            "label": "mapping(address => mapping(uint256 => struct NFTMarket.Listing))"
          },
          "t_mapping(t_uint256,t_struct(Listing)20933_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)20933_storage": {
            "label": "struct NFTMarket.Listing",
            "members": [
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)6692_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)6692_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6306_storage"
              }
            ]
          },
          "t_struct(Set)6306_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(AddressSet)6571_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6306_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_int128)": {
            "label": "mapping(address => int128)"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_contract(IPriceOracle)32014": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1009c3de4d06ffe5f5d5ee4601d916e4c0d6414ddf0237c12a167957eee273e": {
      "address": "0xA4DC29330B832796DBb8B92dE245086201787003",
      "txHash": "0x83cc5aa54b51617fe2439438158e6a2356e3ca844b9bc208339cd74edc2d72de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WaxBridge",
            "label": "latestWaxChainBlockNumberProcessed",
            "type": "t_uint256",
            "src": "../project:/contracts/WaxBridge.sol:27"
          },
          {
            "contract": "WaxBridge",
            "label": "totalOwedBnb",
            "type": "t_uint256",
            "src": "../project:/contracts/WaxBridge.sol:28"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitPerPeriod",
            "type": "t_uint256",
            "src": "../project:/contracts/WaxBridge.sol:29"
          },
          {
            "contract": "WaxBridge",
            "label": "bnbLimitTimestamp",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/WaxBridge.sol:30"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawableBnb",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/WaxBridge.sol:31"
          },
          {
            "contract": "WaxBridge",
            "label": "withdrawnBnbDuringPeriod",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/WaxBridge.sol:32"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "498e2a0b3757e479509d6aec2c2acfebb9b98f681a684fb0bae2c243d547bfca": {
      "address": "0x338314A78Eb2C9A643ef755B853634EEd1FF6A70",
      "txHash": "0x5fa3b24389b1956af3efbd4b0efd171d8699a87e20b394f4662d9365198a7f26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Promos",
            "label": "bits",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Promos.sol:27"
          },
          {
            "contract": "Promos",
            "label": "firstCharacterPromoInGameOnlyFundsGivenInUsd",
            "type": "t_int128",
            "src": "../project:/contracts/Promos.sol:33"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4ce95593205a1faf3399c7ab082fc05e3734a923831025415b4040e3fedbf0d0": {
      "address": "0x6CfbE70056E9Ba54A537E1fdb40e242C820b7a83",
      "txHash": "0xe1a471a3d743d17d689eb6ab0d9b525d8ba715cd0d31471e542ca6d0e5acc7fb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Blacksmith",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/Blacksmith.sol:36"
          },
          {
            "contract": "Blacksmith",
            "label": "randoms",
            "type": "t_contract(IRandoms)32033",
            "src": "../project:/contracts/Blacksmith.sol:37"
          },
          {
            "contract": "Blacksmith",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Blacksmith.sol:39"
          },
          {
            "contract": "Blacksmith",
            "label": "shields",
            "type": "t_contract(Shields)37459",
            "src": "../project:/contracts/Blacksmith.sol:41"
          },
          {
            "contract": "Blacksmith",
            "label": "game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/Blacksmith.sol:42"
          },
          {
            "contract": "Blacksmith",
            "label": "itemAddresses",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/Blacksmith.sol:45"
          },
          {
            "contract": "Blacksmith",
            "label": "itemFlatPrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Blacksmith.sol:46"
          },
          {
            "contract": "Blacksmith",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/Blacksmith.sol:48"
          },
          {
            "contract": "Blacksmith",
            "label": "itemSeriesFlatPrices",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/Blacksmith.sol:50"
          }
        ],
        "types": {
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_contract(IRandoms)32033": {
            "label": "contract IRandoms"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_contract(Shields)37459": {
            "label": "contract Shields"
          },
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "535d0ebd7f27b7b739c6b77a2723f3a64bd1c5fc55972ff4dbd2c4012bf6c599": {
      "address": "0xaaF5b9FE1Fb98c34732328c4cE1E377977275ADA",
      "txHash": "0x7e93468052dadfb811cb7d6ddc629a9722129df514792b64d702c431507a2820",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Shields",
            "label": "tokens",
            "type": "t_array(t_struct(Shield)35903_storage)dyn_storage",
            "src": "../project:/contracts/shields.sol:59"
          },
          {
            "contract": "Shields",
            "label": "cosmetics",
            "type": "t_array(t_struct(ShieldCosmetics)35908_storage)dyn_storage",
            "src": "../project:/contracts/shields.sol:60"
          },
          {
            "contract": "Shields",
            "label": "shieldBaseMultiplier",
            "type": "t_int128",
            "src": "../project:/contracts/shields.sol:62"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointBasic",
            "type": "t_int128",
            "src": "../project:/contracts/shields.sol:63"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointDEF",
            "type": "t_int128",
            "src": "../project:/contracts/shields.sol:64"
          },
          {
            "contract": "Shields",
            "label": "defenseMultPerPointMatching",
            "type": "t_int128",
            "src": "../project:/contracts/shields.sol:65"
          },
          {
            "contract": "Shields",
            "label": "lastMintedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/shields.sol:67"
          },
          {
            "contract": "Shields",
            "label": "firstMintedOfLastBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/shields.sol:68"
          },
          {
            "contract": "Shields",
            "label": "durabilityTimestamp",
            "type": "t_mapping(t_uint256,t_uint64)",
            "src": "../project:/contracts/shields.sol:70"
          },
          {
            "contract": "Shields",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/shields.sol:75"
          }
        ],
        "types": {
          "t_array(t_struct(Shield)35903_storage)dyn_storage": {
            "label": "struct Shields.Shield[]"
          },
          "t_struct(Shield)35903_storage": {
            "label": "struct Shields.Shield",
            "members": [
              {
                "label": "properties",
                "type": "t_uint16"
              },
              {
                "label": "stat1",
                "type": "t_uint16"
              },
              {
                "label": "stat2",
                "type": "t_uint16"
              },
              {
                "label": "stat3",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(ShieldCosmetics)35908_storage)dyn_storage": {
            "label": "struct Shields.ShieldCosmetics[]"
          },
          "t_struct(ShieldCosmetics)35908_storage": {
            "label": "struct Shields.ShieldCosmetics",
            "members": [
              {
                "label": "version",
                "type": "t_uint8"
              },
              {
                "label": "seed",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c93eff53bbf21a025313d18810f36df81c26f76f391499735cc65b894a91d970": {
      "address": "0x4C171f6db0b46CEB0E1aF613eE20596C22bB810B",
      "txHash": "0x45c068bec2a1fe35acf12b70954c76b47c12d708cdea520c0dcdfddec4eac53f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterRenameTagConsumables.sol:8"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "../project:/contracts/CharacterRenameTagConsumables.sol:10"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "../project:/contracts/CharacterRenameTagConsumables.sol:11"
          },
          {
            "contract": "CharacterRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/CharacterRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d72a7ff66f3f6a2c8f4ec8b2b6bd37637de00f5c6a075c360a4afd7904bf483d": {
      "address": "0x8a6Be3b74f4fE8aD4D429Cda8B47622953A3797a",
      "txHash": "0xda235c1e128e0c1c53b59c8edf6d9bc0408217bf91ab808adf5ff50cad6997bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/WeaponRenameTagConsumables.sol:8"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_minSize",
            "type": "t_uint8",
            "src": "../project:/contracts/WeaponRenameTagConsumables.sol:10"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "_maxSize",
            "type": "t_uint8",
            "src": "../project:/contracts/WeaponRenameTagConsumables.sol:11"
          },
          {
            "contract": "WeaponRenameTagConsumables",
            "label": "renames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/WeaponRenameTagConsumables.sol:13"
          }
        ],
        "types": {
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d4322f7eb3a20b3806459092652155a844a07307cdea3231b7e644e90eaf0cc7": {
      "address": "0x4eF474cAb44599E0C67Fe8e4Cb89449EB68A2F71",
      "txHash": "0xffbb1fc5d10fa9edc3b219093693dc1cb6a2a83506d6ce5a39040e706c28cc7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "CharacterFireTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterFireTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e1d8625a92e88e37048891a31e12336c43f4f7fade4fb791c74336d4a81b1d0": {
      "address": "0x85eCCbB6A143766c7711E3E7a76B7C5aa69C02d3",
      "txHash": "0x9552d360be343e04a1f70b3e0cbf52663b9e0b58674ae247f2b52c80092b5b98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "CharacterEarthTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterEarthTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e65f4b8daed7de019900bac4443cf47cde2f31aac348f3705c2542ad0e49541": {
      "address": "0x56ccC71Df4e3670D033C254f473E3c73b98a6511",
      "txHash": "0x7da0de9494fadadb63f3ed26f14bbd1f3149ed055a0216250a64e01e764f1e12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "CharacterWaterTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterWaterTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cb3787187641ad8d28f7c96c64ed6b49b53bcaf28794b61f791de65f05114e62": {
      "address": "0x5715eddB98D6dd8C24BaaCCF9b1176A925b56dfb",
      "txHash": "0x0cea5897facf9d0621971c8c5f796fa8326753d71bedfe653163e2921a6c3ead",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Consumables",
            "label": "owned",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "../project:/contracts/Consumables.sol:13"
          },
          {
            "contract": "Consumables",
            "label": "_enabled",
            "type": "t_bool",
            "src": "../project:/contracts/Consumables.sol:15"
          },
          {
            "contract": "CharacterLightningTraitChangeConsumables",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterLightningTraitChangeConsumables.sol:8"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "939c7015137f92f0e1bb5238c51109732e80f2b8f8ec492b9ba65816574fee96": {
      "address": "0x9343C3b2017F533516801ad337FBB1E6cdAd1492",
      "txHash": "0xf461dd8af34717bb30c9d647b14dd9a5e0d2c6d7c1e5200ad67a659de60505d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "KeyLootbox",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/items/KeyLootbox.sol:14"
          }
        ],
        "types": {
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9b0e50ec132ae9003750c3a96c82aa847c58acbc5579d4eb43defcfd2009e373": {
      "address": "0x4013dA2781E5E8c32ad9d4e40E6427507A4F3135",
      "txHash": "0x41a932f68d108d29598fe7ac1022e21f8f68efd391d71eabdd3aeac1c6134b43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "RaidTrinket",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/items/RaidTrinket.sol:23"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "../project:/contracts/items/RaidTrinket.sol:25"
          },
          {
            "contract": "RaidTrinket",
            "label": "tokenEffect",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/items/RaidTrinket.sol:26"
          }
        ],
        "types": {
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2ecbf861af3612fa398692277f416c595ca1832e2ab46bbe92d165a3e9ab0667": {
      "address": "0x3ae3EfC0ec63E5549d8a7432956E84a46346C74b",
      "txHash": "0xc3b5e9c6aa23d5b397b66fdf4c56b022472c654e92c807a8a08fa7fc1f3882bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3762_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3139_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Junk",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/items/Junk.sol:23"
          },
          {
            "contract": "Junk",
            "label": "tokenStars",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "../project:/contracts/items/Junk.sol:25"
          }
        ],
        "types": {
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3762_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UintSet)3762_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)3139_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2821_storage"
              }
            ]
          },
          "t_struct(Map)2821_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2813_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2813_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2813_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "604f9c2434d1c399476d7442f9c70970efdd08df1e3eb7fb29cf2d8213612b1e": {
      "address": "0xEDA5C4b4165673a271a96097C1eD149E463072FE",
      "txHash": "0xeef00cfd4ae665c44ec279f0cc46c823aad1eccbe5ae65b41f28d51a5c671909",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Raid1",
            "label": "game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/raid1.sol:47"
          },
          {
            "contract": "Raid1",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/raid1.sol:48"
          },
          {
            "contract": "Raid1",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/raid1.sol:49"
          },
          {
            "contract": "Raid1",
            "label": "promos",
            "type": "t_contract(Promos)23585",
            "src": "../project:/contracts/raid1.sol:50"
          },
          {
            "contract": "Raid1",
            "label": "staminaCost",
            "type": "t_uint64",
            "src": "../project:/contracts/raid1.sol:60"
          },
          {
            "contract": "Raid1",
            "label": "durabilityCost",
            "type": "t_uint64",
            "src": "../project:/contracts/raid1.sol:61"
          },
          {
            "contract": "Raid1",
            "label": "joinCost",
            "type": "t_int128",
            "src": "../project:/contracts/raid1.sol:62"
          },
          {
            "contract": "Raid1",
            "label": "xpReward",
            "type": "t_uint16",
            "src": "../project:/contracts/raid1.sol:63"
          },
          {
            "contract": "Raid1",
            "label": "raidIndex",
            "type": "t_uint256",
            "src": "../project:/contracts/raid1.sol:65"
          },
          {
            "contract": "Raid1",
            "label": "raidStatus",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "../project:/contracts/raid1.sol:67"
          },
          {
            "contract": "Raid1",
            "label": "raidEndTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/raid1.sol:68"
          },
          {
            "contract": "Raid1",
            "label": "raidSeed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/raid1.sol:69"
          },
          {
            "contract": "Raid1",
            "label": "raidBossTrait",
            "type": "t_mapping(t_uint256,t_uint8)",
            "src": "../project:/contracts/raid1.sol:70"
          },
          {
            "contract": "Raid1",
            "label": "raidBossPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/raid1.sol:71"
          },
          {
            "contract": "Raid1",
            "label": "raidPlayerPower",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/raid1.sol:72"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipants",
            "type": "t_mapping(t_uint256,t_array(t_struct(Raider)33035_storage)dyn_storage)",
            "src": "../project:/contracts/raid1.sol:73"
          },
          {
            "contract": "Raid1",
            "label": "raidParticipantIndices",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "src": "../project:/contracts/raid1.sol:74"
          },
          {
            "contract": "Raid1",
            "label": "raidRewardClaimed",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "../project:/contracts/raid1.sol:75"
          },
          {
            "contract": "Raid1",
            "label": "links",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/raid1.sol:79"
          },
          {
            "contract": "Raid1",
            "label": "numberParameters",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/raid1.sol:81"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_contract(Promos)23585": {
            "label": "contract Promos"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_array(t_struct(Raider)33035_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Raid1.Raider[])"
          },
          "t_array(t_struct(Raider)33035_storage)dyn_storage": {
            "label": "struct Raid1.Raider[]"
          },
          "t_struct(Raider)33035_storage": {
            "label": "struct Raid1.Raider",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "charID",
                "type": "t_uint256"
              },
              {
                "label": "wepID",
                "type": "t_uint256"
              },
              {
                "label": "power",
                "type": "t_uint24"
              },
              {
                "label": "traitsCWS",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => uint256[]))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "08eae0de8eacabac92bcc1b71257b95ce0bf81f1aa54c497730a914fdcb32264": {
      "address": "0x69de30e6BF27e14614F75a1C7791bDF6DD4824e0",
      "txHash": "0x00bd1df7861eb9f7fcd04fd54cfbb322ad45a043023991d47c686a1d937ede63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PvpArena",
            "label": "game",
            "type": "t_contract(CryptoBlades)31997",
            "src": "../project:/contracts/PvpArena.sol:48"
          },
          {
            "contract": "PvpArena",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/PvpArena.sol:49"
          },
          {
            "contract": "PvpArena",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/PvpArena.sol:50"
          },
          {
            "contract": "PvpArena",
            "label": "shields",
            "type": "t_contract(Shields)37459",
            "src": "../project:/contracts/PvpArena.sol:51"
          },
          {
            "contract": "PvpArena",
            "label": "skillToken",
            "type": "t_contract(IERC20)5647",
            "src": "../project:/contracts/PvpArena.sol:52"
          },
          {
            "contract": "PvpArena",
            "label": "raids",
            "type": "t_contract(Raid1)35558",
            "src": "../project:/contracts/PvpArena.sol:53"
          },
          {
            "contract": "PvpArena",
            "label": "randoms",
            "type": "t_contract(IRandoms)32033",
            "src": "../project:/contracts/PvpArena.sol:54"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolTaxPercent",
            "type": "t_uint8",
            "src": "../project:/contracts/PvpArena.sol:57"
          },
          {
            "contract": "PvpArena",
            "label": "wageringFactor",
            "type": "t_uint8",
            "src": "../project:/contracts/PvpArena.sol:59"
          },
          {
            "contract": "PvpArena",
            "label": "_baseWagerUSD",
            "type": "t_int128",
            "src": "../project:/contracts/PvpArena.sol:61"
          },
          {
            "contract": "PvpArena",
            "label": "_tierWagerUSD",
            "type": "t_int128",
            "src": "../project:/contracts/PvpArena.sol:63"
          },
          {
            "contract": "PvpArena",
            "label": "unattackableSeconds",
            "type": "t_uint256",
            "src": "../project:/contracts/PvpArena.sol:65"
          },
          {
            "contract": "PvpArena",
            "label": "decisionSeconds",
            "type": "t_uint256",
            "src": "../project:/contracts/PvpArena.sol:67"
          },
          {
            "contract": "PvpArena",
            "label": "winningPoints",
            "type": "t_uint8",
            "src": "../project:/contracts/PvpArena.sol:69"
          },
          {
            "contract": "PvpArena",
            "label": "losingPoints",
            "type": "t_uint8",
            "src": "../project:/contracts/PvpArena.sol:71"
          },
          {
            "contract": "PvpArena",
            "label": "_maxCharactersPerRanking",
            "type": "t_uint8",
            "src": "../project:/contracts/PvpArena.sol:73"
          },
          {
            "contract": "PvpArena",
            "label": "prizePercentages",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/PvpArena.sol:76"
          },
          {
            "contract": "PvpArena",
            "label": "_duelQueue",
            "type": "t_struct(UintSet)6692_storage",
            "src": "../project:/contracts/PvpArena.sol:78"
          },
          {
            "contract": "PvpArena",
            "label": "fighterByCharacter",
            "type": "t_mapping(t_uint256,t_struct(Fighter)23632_storage)",
            "src": "../project:/contracts/PvpArena.sol:81"
          },
          {
            "contract": "PvpArena",
            "label": "duelByAttacker",
            "type": "t_mapping(t_uint256,t_struct(Duel)23641_storage)",
            "src": "../project:/contracts/PvpArena.sol:83"
          },
          {
            "contract": "PvpArena",
            "label": "characterRankingPoints",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/PvpArena.sol:85"
          },
          {
            "contract": "PvpArena",
            "label": "excessWagerByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/PvpArena.sol:87"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingEarningsByPlayer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/PvpArena.sol:89"
          },
          {
            "contract": "PvpArena",
            "label": "_lastActivityByCharacter",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/PvpArena.sol:91"
          },
          {
            "contract": "PvpArena",
            "label": "_fightersByTier",
            "type": "t_mapping(t_uint8,t_struct(UintSet)6692_storage)",
            "src": "../project:/contracts/PvpArena.sol:93"
          },
          {
            "contract": "PvpArena",
            "label": "_fightersByPlayer",
            "type": "t_mapping(t_address,t_struct(UintSet)6692_storage)",
            "src": "../project:/contracts/PvpArena.sol:95"
          },
          {
            "contract": "PvpArena",
            "label": "_charactersInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/PvpArena.sol:97"
          },
          {
            "contract": "PvpArena",
            "label": "_weaponsInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/PvpArena.sol:99"
          },
          {
            "contract": "PvpArena",
            "label": "_shieldsInArena",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../project:/contracts/PvpArena.sol:101"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingsPoolByTier",
            "type": "t_mapping(t_uint8,t_uint256)",
            "src": "../project:/contracts/PvpArena.sol:103"
          },
          {
            "contract": "PvpArena",
            "label": "_rankingByTier",
            "type": "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/PvpArena.sol:105"
          }
        ],
        "types": {
          "t_contract(CryptoBlades)31997": {
            "label": "contract CryptoBlades"
          },
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_contract(Shields)37459": {
            "label": "contract Shields"
          },
          "t_contract(IERC20)5647": {
            "label": "contract IERC20"
          },
          "t_contract(Raid1)35558": {
            "label": "contract Raid1"
          },
          "t_contract(IRandoms)32033": {
            "label": "contract IRandoms"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_int128": {
            "label": "int128"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(UintSet)6692_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6306_storage"
              }
            ]
          },
          "t_struct(Set)6306_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Fighter)23632_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Fighter)"
          },
          "t_struct(Fighter)23632_storage": {
            "label": "struct PvpArena.Fighter",
            "members": [
              {
                "label": "characterID",
                "type": "t_uint256"
              },
              {
                "label": "weaponID",
                "type": "t_uint256"
              },
              {
                "label": "shieldID",
                "type": "t_uint256"
              },
              {
                "label": "wager",
                "type": "t_uint256"
              },
              {
                "label": "useShield",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Duel)23641_storage)": {
            "label": "mapping(uint256 => struct PvpArena.Duel)"
          },
          "t_struct(Duel)23641_storage": {
            "label": "struct PvpArena.Duel",
            "members": [
              {
                "label": "attackerID",
                "type": "t_uint256"
              },
              {
                "label": "defenderID",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "isPending",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint8,t_struct(UintSet)6692_storage)": {
            "label": "mapping(uint8 => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_address,t_struct(UintSet)6692_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4bbbf28870ee8a76f16977264a8b9c7870749ea58a08afc31ebdce0725f8b22a": {
      "address": "0x58b8cE6F5370641C5354037Fedd7165c55C8913A",
      "txHash": "0xa0c2a4c388d4b6cb6b406c95318c06104e2db9a529b4e8680c3db446467d4972",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "../project:/contracts/Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "../project:/contracts/Cosmetics.sol:20"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "weapons",
            "type": "t_contract(Weapons)43223",
            "src": "../project:/contracts/WeaponCosmetics.sol:8"
          },
          {
            "contract": "WeaponCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/WeaponCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Weapons)43223": {
            "label": "contract Weapons"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ae9588f7e377ec6c88fc597f6b7a234c653caef33c9ff3e386f498270c4f4221": {
      "address": "0x419501060D80A9297d6b0afDd96B9Df1b3C2E20b",
      "txHash": "0x32413fb4d5d96295091c4d908db1588f621afeab17782239d7af5ab87319a523",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)446_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Cosmetics",
            "label": "owned",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))",
            "src": "../project:/contracts/Cosmetics.sol:18"
          },
          {
            "contract": "Cosmetics",
            "label": "_cosmeticAvailable",
            "type": "t_mapping(t_uint32,t_bool)",
            "src": "../project:/contracts/Cosmetics.sol:20"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "characters",
            "type": "t_contract(Characters)28420",
            "src": "../project:/contracts/CharacterCosmetics.sol:8"
          },
          {
            "contract": "CharacterCosmetics",
            "label": "appliedCosmetics",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "../project:/contracts/CharacterCosmetics.sol:10"
          }
        ],
        "types": {
          "t_contract(Characters)28420": {
            "label": "contract Characters"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
            "label": "mapping(address => mapping(uint32 => uint32))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint32,t_uint32)": {
            "label": "mapping(uint32 => uint32)"
          },
          "t_mapping(t_uint32,t_bool)": {
            "label": "mapping(uint32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)446_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)446_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3641_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3641_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3376_storage"
              }
            ]
          },
          "t_struct(Set)3376_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
